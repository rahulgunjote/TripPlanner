name: Pull Request CI

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: macos-15
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true
      
      - name: Install Dependencies
        run: bundle install
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Show Xcode Version
        run: xcodebuild -version
      
      - name: Show Available Simulators
        run: xcrun simctl list devices available
      
      - name: Build for Testing
        run: bundle exec fastlane build_for_testing
      
      - name: Run Unit Tests
        run: bundle exec fastlane unit_tests
      
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: fastlane/test_output/unit_tests/
          retention-days: 30
      
      - name: Comment Test Results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const testResults = '✅ Unit tests completed!';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testResults
            });
  
  ui-tests:
    name: UI Tests
    runs-on: macos-15
    needs: unit-tests
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true
      
      - name: Install Dependencies
        run: bundle install
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Build for Testing
        run: bundle exec fastlane build_for_testing
      
      - name: Run UI Tests
        run: bundle exec fastlane ui_tests
      
      - name: Upload UI Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: fastlane/test_output/ui_tests/
          retention-days: 30
      
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-screenshots
          path: fastlane/screenshots/
          retention-days: 7
      
      - name: Comment Test Results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const testResults = '✅ UI tests completed!';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testResults
            });
  
  build-check:
    name: Build Check
    runs-on: macos-15
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true
      
      - name: Install Dependencies
        run: bundle install
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Build Project
        run: bundle exec fastlane build
      
      - name: Comment Build Status on PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Build succeeded!'
            });

